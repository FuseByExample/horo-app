<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    We want to avoid instantiating a DataSource using the usual driverName=org.postgres.Driver method. This is because
    the connection pooling library will do a Class.forName(driverName), which doesn't play well in an OSGi environment.
    So we're just going to create a simple, driver-specific DataSource, and wrap it in a connection pool.
    -->
    <bean id="dataSource.pg" class="org.postgresql.ds.PGSimpleDataSource">
        <property name="serverName" value="${pg.server}"/>
        <property name="databaseName" value="${pg.database}"/>
        <property name="portNumber" value="${pg.port}"/>
        <property name="user" value="${pg.username}"/>
        <property name="password" value="${pg.password}"/>
    </bean>

    <bean id="dataSource.pooled" class="com.mchange.v2.c3p0.DataSources" factory-method="pooledDataSource">
        <constructor-arg ref="dataSource.pg"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg ref="dataSource.pooled"/>
    </bean>

</beans>
