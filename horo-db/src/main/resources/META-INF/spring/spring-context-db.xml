<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 FuseSource
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    We want to avoid instantiating a DataSource using the usual driverName=org.postgres.Driver method. This is because
    the connection pooling library will do a Class.forName(driverName), which doesn't play well in an OSGi environment.
    So we're just going to create a simple, driver-specific DataSource, and wrap it in a connection pool.
    -->
    <bean id="dataSource.pg" class="org.postgresql.ds.PGSimpleDataSource">
        <property name="serverName" value="${pg.server}"/>
        <property name="databaseName" value="${pg.database}"/>
        <property name="portNumber" value="${pg.port}"/>
        <property name="user" value="${pg.username}"/>
        <property name="password" value="${pg.password}"/>
    </bean>

    <bean id="dataSource.pooled" class="com.mchange.v2.c3p0.DataSources" factory-method="pooledDataSource">
        <constructor-arg ref="dataSource.pg"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg ref="dataSource.pooled"/>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>
