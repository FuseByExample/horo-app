<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="horoscope">

    <!-- Result maps describe the mapping between the columns returned
   from a query, and the class properties.  A result map isn't
   necessary if the columns (or aliases) match to the properties
   exactly. -->
    <resultMap id="HoroscopeResult" type="Horoscope">
        <id property="id" column="horoscope_id"/>
        <!-- feed_id -->
        <result property="starSign" column="name"/>
        <result property="predictsFor" column="predicts_for"/>
        <result property="entry" column="entry"/>
    </resultMap>

    <select id="selectAll" resultMap="HoroscopeResult">
        select h.horoscope_id, s.name, h.predicts_for, h.entry
        from horoscopes h
        inner join signs s on (h.sign_id = s.sign_id)
    </select>

    <!-- Insert example, using the Account parameter class -->
    <insert id="insert" parameterType="Horoscope">
        insert into horoscopes (
        sign_id,
        feed_id,
        predicts_for,
        entry
        )
        select s.sign_id, f.feed_id, #{predictsFor}, #{entry}
        from signs s, feeds f
        where s.name = #{starSign.name}
        and f.name = #{feed.name}
    </insert>

    <sql id="withHoroscope">
        from horoscopes h
        inner join signs s on (h.sign_id = s.sign_id)
        inner join feeds f on (h.feed_id = f.feed_id)
        where h.predicts_for = #{predictsFor}
        and s.name = #{starSign.name}
        and f.name = #{feed.name}
    </sql>

    <select id="count" resultType="int" parameterType="Horoscope">
        select count(*)
        <include refid="withHoroscope"/>
    </select>

    <delete id="delete" parameterType="Horoscope">
        delete from horoscopes
        where horoscope_id in (
        select h.horoscope_id
        <include refid="withHoroscope"/>
        )
    </delete>

</mapper>
